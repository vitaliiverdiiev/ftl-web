{"version":3,"sources":["sections/header/header.section.jsx","COMPONENTS/form-input/form-input.component.jsx","COMPONENTS/form-select/form-select.component.jsx","components/button/button.component.jsx","pages/add-billing-method/add-billing-method.page.jsx","app/app.component.jsx","index.js"],"names":["Header","className","to","FormInput","wrapperClasses","label","value","type","placeholder","required","name","onchange","onChange","e","FormSelect","options","map","option","ButtonIcon","props","children","Button","classes","onclick","disabled","icon","href","target","color","outline","reversed","trim","onClick","chevronLeftIcon","aria-hidden","chevronRightIcon","AddBillingMethodPage","useState","currentStep","setCurrentStep","stepNumber","stepTitle","step","checkIfRequiredFieldsFilled","checker","document","querySelectorAll","forEach","field","length","push","includes","setRequiredFilled","paymentMethod","createAName","iban","bankName","fullName","country","cityRegion","district","zip","street","individualTaxNumber","bankOfBeneficiary","settlement","swift","correspondentBank","newPaymentMethod","setNewPaymentMethod","handleChange","requiredFilled","stepHandler","preventDefault","innerText","toLowerCase","useEffect","action","console","log","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a444e88a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport \"./header.styles.scss\";\n\nconst Header = () => (\n  <header className=\"header\">\n    <Link className=\"logo\" to=\"/\">\n      Faster than light\n    </Link>\n    <nav className=\"nav\">\n      {/* <NavLink className=\"nav__link\" to=\"/dashboard\">\n        Dashboard\n      </NavLink>\n      <NavLink className=\"nav__link\" to=\"/billing-information\">\n        Billing\n      </NavLink>\n      <NavLink className=\"nav__link\" to=\"/buttons\">\n        Buttons\n      </NavLink> */}\n      <NavLink className=\"nav__link\" to=\"/add-billing-method\">\n        Add billing method\n      </NavLink>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./form-input.styles.scss\";\n\nconst FormInput = ({\n  wrapperClasses,\n  label,\n  value,\n  type,\n  placeholder,\n  required,\n  name,\n  onchange,\n}) => {\n  return (\n    <div className={`form-item form-group ${wrapperClasses}`}>\n      <label className=\"form-label\">\n        {label} {required && <span className=\"form-required\">*</span>}\n      </label>\n      <input\n        className=\"form-control\"\n        value={value}\n        placeholder={placeholder}\n        type={type}\n        name={name}\n        onChange={(e) => onchange && onchange(e)}\n        required={required}\n      />\n    </div>\n  );\n};\n\nexport default FormInput;\n","import React from \"react\";\nimport \"./form-select.styles.scss\";\n\nconst FormSelect = ({\n  wrapperClasses,\n  label,\n  options,\n  required,\n  name,\n  onchange,\n}) => {\n  return (\n    <div className={`form-group form-item ${wrapperClasses}`}>\n      <label className=\"form-label\">\n        {label} {required && <span className=\"form-required\">*</span>}\n      </label>\n      <div className=\"form-select\">\n        <select\n          className=\"form-control\"\n          name={name}\n          onChange={(e) => onchange && onchange(e)}\n          required={required}\n        >\n          <option></option>\n          {options.map((option) => (\n            <option key={option} value={option}>\n              {option}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default FormSelect;\n","import React from \"react\";\nimport \"./button.styles.scss\";\n\nconst Button = ({\n  classes,\n  type,\n  onclick,\n  disabled,\n  icon,\n  value,\n  href,\n  target,\n  color,\n  outline,\n  reversed,\n}) =>\n  href ? (\n    <a\n      className={`button ${color ? `button-${color}` : \"\"} ${\n        outline ? `button-${color}-outline` : \"\"\n      } ${reversed ? `button-reversed` : \"\"} ${classes ? classes : \"\"}`.trim()}\n      href={href}\n      target={target}\n    >\n      {icon && <ButtonIcon children={icon} />}\n      {value}\n    </a>\n  ) : (\n    <button\n      className={`button ${color ? `button-${color}` : \"\"} ${\n        outline ? `button-${color}-outline` : \"\"\n      } ${reversed ? `button-reversed` : \"\"} ${classes ? classes : \"\"}`.trim()}\n      type={type}\n      onClick={(e) => onclick && onclick(e)}\n      disabled={disabled}\n    >\n      {icon && <ButtonIcon children={icon} />}\n      {value}\n    </button>\n  );\n\nconst ButtonIcon = (props) => (\n  <div className=\"button-icon\">{props.children}</div>\n);\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\nimport FormInput from \"../../COMPONENTS/form-input/form-input.component\";\nimport FormSelect from \"../../COMPONENTS/form-select/form-select.component\";\nimport Button from \"../../components/button/button.component\";\nimport \"./add-billing-method.styles.scss\";\n\nconst chevronLeftIcon = (\n  <i className=\"fa fa-chevron-left\" aria-hidden=\"true\"></i>\n);\nconst chevronRightIcon = (\n  <i className=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>\n);\n\nconst AddBillingMethodPage = (props) => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [step] = useState([\n    {\n      stepNumber: 1,\n      stepTitle: \"Add new payment method\",\n    },\n    {\n      stepNumber: 2,\n      stepTitle: \"Add bank of beneficiary\",\n    },\n    {\n      stepNumber: 3,\n      stepTitle: \"Add correspondent bank\",\n    },\n  ]);\n\n  const checkIfRequiredFieldsFilled = () => {\n    const checker = [];\n    document.querySelectorAll(\"[required]\").forEach((field) => {\n      field.value.length > 0 ? checker.push(true) : checker.push(false);\n    });\n\n    if (!checker.includes(false)) {\n      return setRequiredFilled(false);\n    }\n\n    return setRequiredFilled(true);\n  };\n\n  const [newPaymentMethod, setNewPaymentMethod] = useState({\n    paymentMethod: {\n      paymentMethod: \"\",\n      createAName: \"\",\n      iban: \"\",\n      bankName: \"\",\n      fullName: \"\",\n      country: \"\",\n      cityRegion: \"\",\n      district: \"\",\n      zip: \"\",\n      street: \"\",\n      individualTaxNumber: \"\",\n    },\n    bankOfBeneficiary: {\n      country: \"\",\n      cityRegion: \"\",\n      district: \"\",\n      zip: \"\",\n      settlement: \"\",\n      street: \"\",\n      swift: \"\",\n      iban: \"\",\n    },\n    correspondentBank: {\n      country: \"\",\n      cityRegion: \"\",\n      district: \"\",\n      zip: \"\",\n      settlement: \"\",\n      street: \"\",\n    },\n  });\n\n  const handleChange = (e, step) => {\n    const { name, value } = e.target;\n    setNewPaymentMethod({\n      ...newPaymentMethod,\n      [step]: {\n        ...newPaymentMethod[step],\n        [name]: value,\n      },\n    });\n  };\n\n  const [requiredFilled, setRequiredFilled] = useState(false);\n\n  const stepHandler = (e) => {\n    e.preventDefault();\n\n    if (e.target.innerText.toLowerCase() === \"prev\" && currentStep !== 1)\n      setCurrentStep(currentStep - 1);\n    if (\n      e.target.innerText.toLowerCase() === \"next\" &&\n      currentStep < step.length\n    )\n      setCurrentStep(currentStep + 1);\n  };\n\n  useEffect(() => {\n    checkIfRequiredFieldsFilled();\n  }, ...document.querySelectorAll([\"required\"]));\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        {step.map(({ stepNumber, stepTitle }) => (\n          <div\n            key={stepNumber}\n            className={`step step-${stepNumber} ${\n              stepNumber === currentStep ? \"step--active\" : \"\"\n            }`}\n          >\n            <span className=\"step-number\">{stepNumber}</span>\n            <span className=\"step-title\">{stepTitle}</span>\n          </div>\n        ))}\n      </div>\n      <div className=\"card-body\">\n        <form action=\"#\">\n          <h3 className=\"form-header\">{step[currentStep - 1].stepTitle}</h3>\n          {currentStep === 1 && (\n            <>\n              <div className=\"form-card form-card-1\">\n                <div className=\"row mb-3\">\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"Payment method\"\n                    options={[\"Bank account\", \"Cash\"]}\n                    name=\"paymentMethod\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"Create a name\"\n                    placeholder=\"Ukrsyb FOP\"\n                    name=\"createAName\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"IBAN\"\n                    placeholder=\"_ _ _ _ _ _ _ _\"\n                    name=\"iban\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"Bank name\"\n                    options={[\"Ukrsyb bank\", \"Monobank\", \"Privat bank\"]}\n                    name=\"bankName\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                  />\n                </div>\n                <div className=\"row mb-3\">\n                  <FormInput\n                    wrapperClasses=\"col-6\"\n                    label=\"Full name (latin Ukrainian language)\"\n                    placeholder=\"Dmytro Anatoliievych Makarenko\"\n                    name=\"fullName\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"Country\"\n                    options={[\"Ukraine\", \"Denmark\", \"Japan\"]}\n                    name=\"country\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"City (region)\"\n                    options={[\"Kyiv\", \"Odessa\", \"Lviv\"]}\n                    name=\"cityRegion\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                </div>\n                <div className=\"row mb-3\">\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"District\"\n                    options={[\"Holosiivskii\", \"Desnyanskii\", \"Shevchenkovskii\"]}\n                    name=\"district\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                  />\n                  <FormInput\n                    label=\"ZIP\"\n                    wrapperClasses=\"col-3\"\n                    placeholder=\"_ _ _ _ _\"\n                    name=\"zip\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"Street\"\n                    placeholder=\"Select\"\n                    name=\"street\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"Individual tax number\"\n                    placeholder=\"_ _ _ _ _ _ _ _\"\n                    name=\"individualTaxNumber\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                </div>\n              </div>\n            </>\n          )}\n          {currentStep === 2 && (\n            <>\n              <div className=\"form-card form-card-1\">\n                <div className=\"row mb-3\">\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"Country\"\n                    options={[\"Ukraine\", \"Denmark\", \"Japan\"]}\n                    name=\"country\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                    required\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"City (region)\"\n                    options={[\"Kyiv\", \"Odessa\", \"Lviv\"]}\n                    name=\"cityRegion\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                    required\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"District\"\n                    options={[\"Holosiivskii\", \"Desnyanskii\", \"Shevchenkovskii\"]}\n                    name=\"district\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                  />\n                  <FormInput\n                    label=\"ZIP\"\n                    wrapperClasses=\"col-3\"\n                    placeholder=\"_ _ _ _ _\"\n                    name=\"zip\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                    required\n                  />\n                </div>\n                <div className=\"row mb-3\">\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"Settlment\"\n                    placeholder=\"Select\"\n                    name=\"settlement\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"Street\"\n                    placeholder=\"Select\"\n                    name=\"street\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                    required\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"SWIFT\"\n                    placeholder=\"KJHGFRSD\"\n                    name=\"swift\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"IBAN\"\n                    placeholder=\"UA9876423164420953\"\n                    name=\"iban\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                  />\n                </div>\n              </div>\n            </>\n          )}\n          {currentStep === 3 && (\n            <>\n              <div className=\"form-card form-card-1\">\n                <div className=\"row mb-3\">\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"Country\"\n                    options={[\"Ukraine\", \"Denmark\", \"Japan\"]}\n                    name=\"country\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                    required\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"City (region)\"\n                    options={[\"Kyiv\", \"Odessa\", \"Lviv\"]}\n                    name=\"cityRegion\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                    required\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"District\"\n                    options={[\"Holosiivskii\", \"Desnyanskii\", \"Shevchenkovskii\"]}\n                    name=\"district\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                  />\n                  <FormInput\n                    label=\"ZIP\"\n                    wrapperClasses=\"col-3\"\n                    placeholder=\"_ _ _ _ _\"\n                    name=\"zip\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                    required\n                  />\n                </div>\n                <div className=\"row mb-3\">\n                  <FormInput\n                    label=\"Settlment\"\n                    wrapperClasses=\"col-3\"\n                    placeholder=\"Input\"\n                    name=\"settlement\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                  />\n                  <FormSelect\n                    label=\"Street\"\n                    wrapperClasses=\"col-3\"\n                    options={[\"Saksaganskogo\", \"Zhilyanskaya\"]}\n                    name=\"street\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                    required\n                  />\n                </div>\n              </div>\n            </>\n          )}\n          <div className=\"form-actions\">\n            <Button\n              color=\"primary\"\n              outline\n              value=\"Prev\"\n              icon={chevronLeftIcon}\n              onclick={stepHandler}\n              disabled={currentStep === 1}\n            />\n            <Button\n              color=\"primary\"\n              value={currentStep < step.length ? \"Next\" : \"Add method\"}\n              icon={chevronRightIcon}\n              onclick={(e) => {\n                e.preventDefault();\n                currentStep < step.length\n                  ? stepHandler(e)\n                  : console.log(newPaymentMethod);\n                checkIfRequiredFieldsFilled();\n              }}\n              disabled={requiredFilled}\n              reversed\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddBillingMethodPage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Header from \"../sections/header/header.section\";\nimport BillingInfoPage from \"../pages/billing-info/billing-info.page\";\nimport DashboardPage from \"../pages/dashboard/dashboard.page\";\nimport ButtonsPage from \"../pages/buttons/buttons.page\";\nimport AddBillingMethodPage from \"../pages/add-billing-method/add-billing-method.page\";\n\nconst App = () => (\n  <>\n    <Header />\n    <Switch>\n      {/* <Route exact path=\"/dashboard\" component={DashboardPage} />\n      <Route exact path=\"/billing-information\" component={BillingInfoPage} />\n      <Route exact path=\"/buttons\" component={ButtonsPage} />\n    /> */}\n      <Route\n        exact\n        path=\"/add-billing-method\"\n        component={AddBillingMethodPage}\n      />\n      <Route exact path=\"*\" component={AddBillingMethodPage} />\n    </Switch>\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./app/app.component.jsx\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}