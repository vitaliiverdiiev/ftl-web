{"version":3,"sources":["sections/header/header.section.jsx","components/form-input/form-input.component.jsx","assets/data/employee-billing-information.js","components/form/form.component.jsx","utils/textModifiers.js","pages/billing-info/billing-info.page.jsx","components/chart/chart.component.jsx","components/range/range.component.jsx","pages/dashboard/dashboard.page.jsx","components/custom-button/custom-button.component.jsx","pages/buttons/buttons.page.jsx","COMPONENTS/form-input/form-input.component.jsx","COMPONENTS/form-select/form-select.component.jsx","components/button/button.component.jsx","pages/add-billing-method/add-billing-method.page.jsx","app/app.component.jsx","index.js"],"names":["Header","className","to","FormInput","props","classes","label","required","editMode","type","name","value","onChange","employeeBillingInformation","country","cityRegion","district","settlement","street","zip","fullName","ukrainianName","individualTaxNumber","BillingInfoForm","useState","setEditMode","billingInformation","setBillingInformation","handleChange","event","target","onClick","class","Object","entries","map","word","key","replace","letter","toUpperCase","split","join","BillingInfoPage","data","date","amount","Chart","ResponsiveContainer","width","height","AreaChart","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","dataKey","stroke","fill","XAxis","axisLine","tickLine","tickMargin","YAxis","tickFormatter","number","Tooltip","content","CustomTooltip","CartesianGrid","opacity","vertical","active","payload","console","log","years","2018","2019","2020","2021","Range","min","max","defaultValue","marks","DashboardPage","ButtonIcon","children","CustomButton","href","color","outline","reversed","onclick","disabled","icon","Tag","trim","ButtonsPage","wrapperClasses","placeholder","onchange","e","FormSelect","options","option","Button","chevronLeftIcon","aria-hidden","chevronRightIcon","AddBillingMethodPage","currentStep","setCurrentStep","stepNumber","stepTitle","step","checkIfRequiredFieldsFilled","checker","document","querySelectorAll","forEach","field","length","push","includes","setRequiredFilled","paymentMethod","createAName","iban","bankName","bankOfBeneficiary","swift","correspondentBank","newPaymentMethod","setNewPaymentMethod","requiredFilled","stepHandler","preventDefault","innerText","toLowerCase","useEffect","action","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9d875059.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport \"./header.styles.scss\";\n\nconst Header = () => (\n  <header className=\"header\">\n    <Link className=\"logo\" to=\"/\">\n      Faster than light\n    </Link>\n    <nav className=\"nav\">\n      <NavLink className=\"nav__link\" to=\"/dashboard\">\n        Dashboard\n      </NavLink>\n      <NavLink className=\"nav__link\" to=\"/billing-information\">\n        Billing\n      </NavLink>\n      <NavLink className=\"nav__link\" to=\"/buttons\">\n        Buttons\n      </NavLink>\n      <NavLink className=\"nav__link\" to=\"/add-billing-method\">\n        Add billing method\n      </NavLink>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst FormInput = (props) => \n      <div className={`form__item ${props.classes}`}>\n        <span className=\"form__item-label\">\n          {props.label}\n          {props.required && <span className=\"form__item-required\"> *</span>}\n        </span>\n  \n        {props.editMode ? (\n          <input\n            className=\"form__item-input\"\n            type=\"text\"\n            name={props.name}\n            value={props.value}\n            onChange={props.onChange}\n            required={props.required}\n          />\n        ) : (\n          <span className=\"form__item-value\">{props.value}</span>\n        )}\n      </div>\n    \n\n\n  export default FormInput;","const employeeBillingInformation = {\n  country: \"ukraine\",\n  cityRegion: \"sumy region\",\n  district: \"romny\",\n  settlement: \"kozhyce\",\n  street: \"yevhena konovaltsia, 24k\",\n  zip: \"09876\",\n  fullName: \"dmytro anatolijovych makarenko\",\n  ukrainianName: \"дмитро анатолійович макаренко\",\n  individualTaxNumber: \"987644232\",\n};\n\nexport default employeeBillingInformation;\n","import React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport employeeBillingInformation from \"../../assets/data/employee-billing-information\";\nimport { capitalizeFirstLetters } from \"../../utils/textModifiers\";\nimport \"./form.styles.scss\";\n\nconst BillingInfoForm = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [billingInformation, setBillingInformation] = useState(employeeBillingInformation);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setBillingInformation({\n      ...billingInformation,\n      [name]: value,\n    });\n  };\n\n  return (\n    <form className=\"form\">\n      <div className=\"form__header\">\n        <h3 className=\"form__header-title\">My billing data</h3>\n        {!editMode && (\n          <button\n            className=\"btn btn-outline-success btn-edit\"\n            type=\"button\"\n            onClick={() => setEditMode(true)}\n          >\n            {/* <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> */}\n            <i class=\"far fa-edit\"></i>\n          </button>\n        )}\n      </div>\n      <div className=\"form__body\">\n        {Object.entries(billingInformation).map(([key, value]) => (\n          <FormInput\n            key={key}\n            label={capitalizeFirstLetters(key)}\n            name={key}\n            value={value}\n            onChange={handleChange}\n            editMode={editMode}\n            required\n          />\n        ))}\n      </div>\n      <div className=\"form__footer\">\n        {editMode && (\n          <button\n            className=\"form__btn btn btn-success\"\n            type=\"button\"\n            onClick={() => setEditMode(false)}\n          >\n            Save\n          </button>\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default BillingInfoForm;\n","const capitalizeFirstLetters = (word) =>\n  word\n    .replace(/(^\\w{1})|(\\s+\\w{1})/g, (letter) => letter.toUpperCase())\n    .split(/(?=[A-Z])/)\n    .join(\" \");\n\nexport { capitalizeFirstLetters };\n","import React from \"react\";\nimport \"./billing-page.styles.scss\";\nimport BillingInfoForm from \"../../components/form/form.component\";\n\nconst BillingInfoPage = () => (\n  <div className=\"page page__billing-info\">\n    <div className=\"page__inner\">\n      <div className=\"page__section\">\n        <div className=\"page__section-body\">\n          <BillingInfoForm />\n        </div>\n      </div>\n      <div className=\"page__section\"></div>\n    </div>\n  </div>\n);\n\nexport default BillingInfoPage;\n","import {\n    Area,\n    AreaChart,\n    CartesianGrid,\n    ResponsiveContainer,\n    Tooltip,\n    XAxis,\n    YAxis,\n  } from \"recharts\";\n  \n  import \"./chart.styles.scss\";\n  \n  const data = [\n    {\n      date: \"Dec\",\n      amount: 500,\n    },\n    {\n      date: \"Jan\",\n      amount: 500,\n    },\n    {\n      date: \"Fab\",\n      amount: 500,\n    },\n    {\n      date: \"Mar\",\n      amount: 800,\n    },\n    {\n      date: \"Apr\",\n      amount: 800,\n    },\n    {\n      date: \"May\",\n      amount: 1000,\n    },\n    {\n      date: \"Jun\",\n      amount: 1000,\n    },\n    {\n      date: \"Jul\",\n      amount: 1200,\n    },\n    {\n      date: \"Aug\",\n      amount: 1200,\n    },\n    {\n      date: \"Sep\",\n      amount: 1200,\n    },\n    {\n      date: \"Oct\",\n      amount: 1650,\n    },\n    {\n      date: \"Nov\",\n      amount: 2000,\n    },\n  ];\n  \n  export default function Chart() {\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <AreaChart data={data}>\n          <defs>\n            <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stopColor=\"#007BFF\" stopOpacity={0.9} />\n              <stop offset=\"40%\" stopColor=\"#007BFF\" stopOpacity={0.5} />\n              <stop offset=\"75%\" stopColor=\"#007BFF\" stopOpacity={0.05} />\n            </linearGradient>\n          </defs>\n          <Area dataKey=\"amount\" stroke=\"#007BFF\" fill=\"url(#color)\" type=\"monotone\" />\n          <XAxis\n            dataKey=\"date\"\n            axisLine={false}\n            tickLine={false}\n            tickMargin={15}\n            //   tick={{ stroke: \"#000\" }}\n          />\n          <YAxis\n            dataKey=\"amount\"\n            axisLine={false}\n            tickLine={false}\n            tickFormatter={(number) => `$${number}`}\n            tickMargin={15}\n            //   tick={{ stroke: \"#000\" }}\n          />\n          <Tooltip content={<CustomTooltip />} />\n          <CartesianGrid opacity=\"0.3\" vertical={false} />\n        </AreaChart>\n      </ResponsiveContainer>\n    );\n  \n    function CustomTooltip({ active, payload, label }) {\n      if (active) {\n        return (\n          <div className=\"tooltippy\">\n            <div className=\"amount-container\">\n              <span>Total</span>\n              <span>${payload[0].payload.amount}</span>\n              {console.log(payload)}\n            </div>\n            <hr />\n            <div className=\"date-container\">{label}</div>\n          </div>\n        );\n      }\n  \n      return null;\n    }\n  }\n  ","import React from \"react\";\nimport { Range as RangeSlider } from \"rc-slider\";\n\nimport \"./range.styles.scss\";\n\nconst years = {\n  2018: 2018,\n  2019: 2019,\n  2020: 2020,\n  2021: 2021,\n};\n\nconst Range = () => <RangeSlider min={2018} max={2021} defaultValue={[2020, 2021]} marks={years} />;\n\nexport default Range;\n","import React from \"react\";\nimport \"./dashboard.styles.scss\";\nimport Chart from \"../../components/chart/chart.component\";\nimport Range from \"../../components/range/range.component\";\n\nconst DashboardPage = () => (\n  <div className=\"dashboard\">\n   <div className=\"card card-1\"></div>\n   <div className=\"card card-2\"></div>\n   <div className=\"card card-3\">\n     <Chart />\n     <Range />\n   </div>\n   <div className=\"card card-4\"></div>\n  </div>\n);\nexport default DashboardPage;\n","import React from \"react\";\nimport \"./custom-button.styles.scss\";\n\nconst CustomButton = ({\n  href,\n  color,\n  outline,\n  reversed,\n  classes,\n  target,\n  type,\n  onclick,\n  disabled,\n  icon,\n  value\n}) => {\n  const Tag = href ? \"a\" : \"button\";\n\n  return (\n    <Tag\n      className={`button ${color ? `button-${color}` : \"\"} ${\n        outline ? `button-${color}-outline` : \"\"\n      } ${reversed ? `button-reversed` : \"\"} ${\n        classes ? classes : \"\"\n      }`.trim()}\n      href={href}\n      target={target}\n      type={type}\n      onClick={() => onclick && onclick()}\n      disabled={disabled}\n    >\n      {icon && <ButtonIcon children={icon} />}\n      {value}\n    </Tag>\n  );\n};\n\nconst ButtonIcon = ({children}) => (\n  <span className=\"button-icon\">{children}</span>\n);\n\nexport default CustomButton;\n","import React from \"react\";\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\nimport \"./buttons.styles.scss\";\n\nconst ButtonsPage = () => (\n  <div className=\"\">\n    <div className=\"buttons\">\n      <div className=\"row-primary mr-2\">\n        <CustomButton\n          value=\"Button\"\n          color=\"success\"\n          type=\"submit\"\n          reversed\n          icon\n          target=\"_blank\"\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport default ButtonsPage;\n","import React from \"react\";\nimport \"./form-input.styles.scss\";\n\nconst FormInput = ({\n  wrapperClasses,\n  label,\n  value,\n  type,\n  placeholder,\n  required,\n  name,\n  onchange,\n}) => {\n  return (\n    <div className={`form-item form-group ${wrapperClasses}`}>\n      <label className=\"form-label\">\n        {label} {required && <span className=\"form-required\">*</span>}\n      </label>\n      <input\n        className=\"form-control\"\n        value={value}\n        placeholder={placeholder}\n        type={type}\n        name={name}\n        onChange={(e) => onchange && onchange(e)}\n        required={required}\n      />\n    </div>\n  );\n};\n\nexport default FormInput;\n","import React from \"react\";\nimport \"./form-select.styles.scss\";\n\nconst FormSelect = ({\n  wrapperClasses,\n  label,\n  options,\n  required,\n  name,\n  onchange,\n}) => {\n  return (\n    <div className={`form-group form-item ${wrapperClasses}`}>\n      <label className=\"form-label\">\n        {label} {required && <span className=\"form-required\">*</span>}\n      </label>\n      <div className=\"form-select\">\n        <select\n          className=\"form-control\"\n          name={name}\n          onChange={(e) => onchange && onchange(e)}\n          required={required}\n        >\n          <option></option>\n          {options.map((option) => (\n            <option key={option} value={option}>\n              {option}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default FormSelect;\n","import React from \"react\";\nimport \"./button.styles.scss\";\n\nconst Button = ({\n  classes,\n  type,\n  onclick,\n  disabled,\n  icon,\n  value,\n  href,\n  target,\n  color,\n  outline,\n  reversed,\n}) =>\n  href ? (\n    <a\n      className={`button ${color ? `button-${color}` : \"\"} ${\n        outline ? `button-${color}-outline` : \"\"\n      } ${reversed ? `button-reversed` : \"\"} ${classes ? classes : \"\"}`.trim()}\n      href={href}\n      target={target}\n    >\n      {icon && <ButtonIcon children={icon} />}\n      {value}\n    </a>\n  ) : (\n    <button\n      className={`button ${color ? `button-${color}` : \"\"} ${\n        outline ? `button-${color}-outline` : \"\"\n      } ${reversed ? `button-reversed` : \"\"} ${classes ? classes : \"\"}`.trim()}\n      type={type}\n      onClick={(e) => onclick && onclick(e)}\n      disabled={disabled}\n    >\n      {icon && <ButtonIcon children={icon} />}\n      {value}\n    </button>\n  );\n\nconst ButtonIcon = (props) => (\n  <div className=\"button-icon\">{props.children}</div>\n);\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\nimport FormInput from \"../../COMPONENTS/form-input/form-input.component\";\nimport FormSelect from \"../../COMPONENTS/form-select/form-select.component\";\nimport Button from \"../../components/button/button.component\";\nimport \"./add-billing-method.styles.scss\";\n\nconst chevronLeftIcon = (\n  <i className=\"fa fa-chevron-left\" aria-hidden=\"true\"></i>\n);\nconst chevronRightIcon = (\n  <i className=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>\n);\n\nconst AddBillingMethodPage = (props) => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [step] = useState([\n    {\n      stepNumber: 1,\n      stepTitle: \"Add new payment method\",\n    },\n    {\n      stepNumber: 2,\n      stepTitle: \"Add bank of beneficiary\",\n    },\n    {\n      stepNumber: 3,\n      stepTitle: \"Add correspondent bank\",\n    },\n  ]);\n\n  const checkIfRequiredFieldsFilled = () => {\n    const checker = [];\n    document.querySelectorAll(\"[required]\").forEach((field) => {\n      field.value.length > 0 ? checker.push(true) : checker.push(false);\n    });\n\n    if (!checker.includes(false)) {\n      return setRequiredFilled(false);\n    }\n\n    return setRequiredFilled(true);\n  };\n\n  const [newPaymentMethod, setNewPaymentMethod] = useState({\n    paymentMethod: {\n      paymentMethod: \"\",\n      createAName: \"\",\n      iban: \"\",\n      bankName: \"\",\n      fullName: \"\",\n      country: \"\",\n      cityRegion: \"\",\n      district: \"\",\n      zip: \"\",\n      street: \"\",\n      individualTaxNumber: \"\",\n    },\n    bankOfBeneficiary: {\n      country: \"\",\n      cityRegion: \"\",\n      district: \"\",\n      zip: \"\",\n      settlement: \"\",\n      street: \"\",\n      swift: \"\",\n      iban: \"\",\n    },\n    correspondentBank: {\n      country: \"\",\n      cityRegion: \"\",\n      district: \"\",\n      zip: \"\",\n      settlement: \"\",\n      street: \"\",\n    },\n  });\n\n  const handleChange = (e, step) => {\n    const { name, value } = e.target;\n    setNewPaymentMethod({\n      ...newPaymentMethod,\n      [step]: {\n        ...newPaymentMethod[step],\n        [name]: value,\n      },\n    });\n  };\n\n  const [requiredFilled, setRequiredFilled] = useState(false);\n\n  const stepHandler = (e) => {\n    e.preventDefault();\n\n    if (e.target.innerText.toLowerCase() === \"prev\" && currentStep !== 1)\n      setCurrentStep(currentStep - 1);\n    if (\n      e.target.innerText.toLowerCase() === \"next\" &&\n      currentStep < step.length\n    )\n      setCurrentStep(currentStep + 1);\n  };\n\n  useEffect(() => {\n    checkIfRequiredFieldsFilled();\n  }, ...document.querySelectorAll([\"required\"]));\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        {step.map(({ stepNumber, stepTitle }) => (\n          <div\n            key={stepNumber}\n            className={`step step-${stepNumber} ${\n              stepNumber === currentStep ? \"step--active\" : \"\"\n            }`}\n          >\n            <span className=\"step-number\">{stepNumber}</span>\n            <span className=\"step-title\">{stepTitle}</span>\n          </div>\n        ))}\n      </div>\n      <div className=\"card-body\">\n        <form action=\"#\">\n          <h3 className=\"form-header\">{step[currentStep - 1].stepTitle}</h3>\n          {currentStep === 1 && (\n            <>\n              <div className=\"form-card form-card-1\">\n                <div className=\"row mb-3\">\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"Payment method\"\n                    options={[\"Bank account\", \"Cash\"]}\n                    name=\"paymentMethod\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"Create a name\"\n                    placeholder=\"Ukrsyb FOP\"\n                    name=\"createAName\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"IBAN\"\n                    placeholder=\"_ _ _ _ _ _ _ _\"\n                    name=\"iban\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"Bank name\"\n                    options={[\"Ukrsyb bank\", \"Monobank\", \"Privat bank\"]}\n                    name=\"bankName\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                  />\n                </div>\n                <div className=\"row mb-3\">\n                  <FormInput\n                    wrapperClasses=\"col-6\"\n                    label=\"Full name (latin Ukrainian language)\"\n                    placeholder=\"Dmytro Anatoliievych Makarenko\"\n                    name=\"fullName\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"Country\"\n                    options={[\"Ukraine\", \"Denmark\", \"Japan\"]}\n                    name=\"country\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"City (region)\"\n                    options={[\"Kyiv\", \"Odessa\", \"Lviv\"]}\n                    name=\"cityRegion\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                </div>\n                <div className=\"row mb-3\">\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"District\"\n                    options={[\"Holosiivskii\", \"Desnyanskii\", \"Shevchenkovskii\"]}\n                    name=\"district\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                  />\n                  <FormInput\n                    label=\"ZIP\"\n                    wrapperClasses=\"col-3\"\n                    placeholder=\"_ _ _ _ _\"\n                    name=\"zip\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"Street\"\n                    placeholder=\"Select\"\n                    name=\"street\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"Individual tax number\"\n                    placeholder=\"_ _ _ _ _ _ _ _\"\n                    name=\"individualTaxNumber\"\n                    onchange={(e) => handleChange(e, \"paymentMethod\")}\n                    required\n                  />\n                </div>\n              </div>\n            </>\n          )}\n          {currentStep === 2 && (\n            <>\n              <div className=\"form-card form-card-1\">\n                <div className=\"row mb-3\">\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"Country\"\n                    options={[\"Ukraine\", \"Denmark\", \"Japan\"]}\n                    name=\"country\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                    required\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"City (region)\"\n                    options={[\"Kyiv\", \"Odessa\", \"Lviv\"]}\n                    name=\"cityRegion\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                    required\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"District\"\n                    options={[\"Holosiivskii\", \"Desnyanskii\", \"Shevchenkovskii\"]}\n                    name=\"district\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                  />\n                  <FormInput\n                    label=\"ZIP\"\n                    wrapperClasses=\"col-3\"\n                    placeholder=\"_ _ _ _ _\"\n                    name=\"zip\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                    required\n                  />\n                </div>\n                <div className=\"row mb-3\">\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"Settlment\"\n                    placeholder=\"Select\"\n                    name=\"settlement\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"Street\"\n                    placeholder=\"Select\"\n                    name=\"street\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                    required\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"SWIFT\"\n                    placeholder=\"KJHGFRSD\"\n                    name=\"swift\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                  />\n                  <FormInput\n                    wrapperClasses=\"col-3\"\n                    label=\"IBAN\"\n                    placeholder=\"UA9876423164420953\"\n                    name=\"iban\"\n                    onchange={(e) => handleChange(e, \"bankOfBeneficiary\")}\n                  />\n                </div>\n              </div>\n            </>\n          )}\n          {currentStep === 3 && (\n            <>\n              <div className=\"form-card form-card-1\">\n                <div className=\"row mb-3\">\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"Country\"\n                    options={[\"Ukraine\", \"Denmark\", \"Japan\"]}\n                    name=\"country\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                    required\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"City (region)\"\n                    options={[\"Kyiv\", \"Odessa\", \"Lviv\"]}\n                    name=\"cityRegion\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                    required\n                  />\n                  <FormSelect\n                    wrapperClasses=\"col-3\"\n                    label=\"District\"\n                    options={[\"Holosiivskii\", \"Desnyanskii\", \"Shevchenkovskii\"]}\n                    name=\"district\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                  />\n                  <FormInput\n                    label=\"ZIP\"\n                    wrapperClasses=\"col-3\"\n                    placeholder=\"_ _ _ _ _\"\n                    name=\"zip\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                    required\n                  />\n                </div>\n                <div className=\"row mb-3\">\n                  <FormInput\n                    label=\"Settlment\"\n                    wrapperClasses=\"col-3\"\n                    placeholder=\"Input\"\n                    name=\"settlement\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                  />\n                  <FormSelect\n                    label=\"Street\"\n                    wrapperClasses=\"col-3\"\n                    options={[\"Saksaganskogo\", \"Zhilyanskaya\"]}\n                    name=\"street\"\n                    onchange={(e) => handleChange(e, \"correspondentBank\")}\n                    required\n                  />\n                </div>\n              </div>\n            </>\n          )}\n          <div className=\"form-actions\">\n            <Button\n              color=\"primary\"\n              outline\n              value=\"Prev\"\n              icon={chevronLeftIcon}\n              onclick={stepHandler}\n              disabled={currentStep === 1}\n            />\n            <Button\n              color=\"primary\"\n              value={currentStep < step.length ? \"Next\" : \"Add method\"}\n              icon={chevronRightIcon}\n              onclick={(e) => {\n                e.preventDefault();\n                currentStep < step.length\n                  ? stepHandler(e)\n                  : console.log(newPaymentMethod);\n                checkIfRequiredFieldsFilled();\n              }}\n              disabled={requiredFilled}\n              reversed\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddBillingMethodPage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Header from \"../sections/header/header.section\";\nimport BillingInfoPage from \"../pages/billing-info/billing-info.page\";\nimport DashboardPage from \"../pages/dashboard/dashboard.page\";\nimport ButtonsPage from \"../pages/buttons/buttons.page\";\nimport AddBillingMethodPage from \"../pages/add-billing-method/add-billing-method.page\";\n\nconst App = () => (\n  <>\n    <Header />\n    <Switch>\n      <Route exact path=\"/dashboard\" component={DashboardPage} />\n      <Route exact path=\"/billing-information\" component={BillingInfoPage} />\n      <Route exact path=\"/buttons\" component={ButtonsPage} />\n      <Route exact path=\"/add-billing-method\" component={AddBillingMethodPage} />\n    </Switch>\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./app/app.component.jsx\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}